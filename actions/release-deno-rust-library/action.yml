name: release-deno-rust-library
description: 'Release Rust with Deno FFI bindings to GitHub and Crates.io'
inputs:
  name:
    description: 'Library name'
    required: true
  github-token:
    description: 'Github token'
    required: true
  cargo-registry-token:
    description: 'Crates.io token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout source
      uses: actions/checkout@v3
      with:
        token: ${{ inputs.github-token }}
    - name: Install Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Deno
      run: |
        deno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts
      shell: bash
    - name: Perform release
      run: |
        cat <<EOT > .releaserc
        ---
        branches:
          - main
        plugins:
          - - "@semantic-release/commit-analyzer"
            - preset: conventionalcommits
          - - "@semantic-release/release-notes-generator"
            - preset: conventionalcommits
          - - "@semantic-release/exec"
            - verifyConditionsCmd: "semantic-release-rust verify-conditions"
              prepareCmd: "semantic-release-rust prepare \${nextRelease.version} && cargo check && deno_bindgen --release https://github.com/${{ github.repository }}/releases/download/v\${nextRelease.version}"
              publishCmd: "cargo publish --no-verify"
          - - "@semantic-release/git"
            - assets: 
              - Cargo.toml
              - Cargo.lock
              - bindings/bindings.ts
          - - "@semantic-release/github"
            - assets:
              - path: ${{ runner.temp }}/target/aarch64-apple-darwin/release/lib${{ inputs.name }}.dylib
                name: "lib${{ inputs.name }}_arm64.dylib"
              - path: ${{ runner.temp }}/target/x86_64-pc-windows-gnu/release/${{ inputs.name }}.dll
                name: "${{ inputs.name }}.dll"
              - path: ${{ runner.temp }}/target/x86_64-unknown-linux-gnu/release/lib${{ inputs.name }}.so
                name: "lib${{ inputs.name }}.so"
        EOT
        cargo install semantic-release-rust --version 1.0.0-alpha.8
        npm install --no-save conventional-changelog-conventionalcommits @semantic-release/exec @semantic-release/git
        npx semantic-release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        CARGO_REGISTRY_TOKEN: ${{ inputs.cargo-registry-token }}
