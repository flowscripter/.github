name: release-deno-rust-library
description: 'Release Rust with Deno FFI bindings to GitHub and Crates.io'
inputs:
  name:
    description: 'Library name'
    required: true
  github-token:
    description: 'Github token'
    required: true
  cargo-registry-token:
    description: 'Crates.io token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Install Node
      uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Deno
      run: |
        deno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts
      shell: bash
    - name: Determine next release version
      run: |
        cargo install semantic-release-rust --version 1.0.0-alpha.8
        cat <<EOT >> .releaserc
        ---
        branches:
          - main
        plugins:
          - - "@semantic-release/commit-analyzer"
            - preset: conventionalcommits
          - - "@semantic-release/exec"
            - verifyReleaseCmd: "echo NEXT_RELEASE_VERSION=\${nextRelease.version} >> NEXT_RELEASE_VERSION"
        EOT
        npm install --no-save conventional-changelog-conventionalcommits @semantic-release/exec
        npx semantic-release -d    
        cat NEXT_RELEASE_VERSION >> $GITHUB_ENV
      shell: bash
    - name: Generate Deno FFI Bindings
      run: |
        deno_bindgen --release https://github.com/${{ env.GITHUB_REPOSITORY }}/releases/tag/v${{ env.NEXT_RELEASE_VERSION }}
      shell: bash
    - name: Get source changes
      id: source_changes
      run: |
        git diff --no-commit-id --name-only HEAD^ HEAD
        echo "::set-output name=files::$(git diff --no-commit-id --name-only HEAD^ HEAD | grep bindings.ts | xargs)"
      shell: bash
    - name: Show result changes
      if: steps.source_changes.outputs.files != ''
      run: echo ${{ steps.source_changes.outputs.files }}
      shell: bash
    - name: Commit and push changes for release
      if: steps.source_changes.outputs.files != ''
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'chore: update Deno FFI bindings for release'
        file_pattern: 'bindings/bindings.ts'
    - name: Perform release
      run: |
        cargo install semantic-release-rust --version 1.0.0-alpha.8
        cat <<EOT >> .releaserc
        ---
        branches:
          - main
        plugins:
          - - "@semantic-release/commit-analyzer"
            - preset: conventionalcommits
          - - "@semantic-release/release-notes-generator"
            - preset: conventionalcommits
          - - "@semantic-release/github"
            - assets:
                - path: ${{ runner.temp }}/target/aarch64-apple-darwin/release/lib${{ inputs.name }}.dylib
                  name: 'lib${{ inputs.name }}.dylib'
                - path: ${{ runner.temp }}/target/x86_64-pc-windows-gnu/release/${{ inputs.name }}.dll
                  name: '${{ inputs.name }}.dll'
                - path: ${{ runner.temp }}/target/x86_64-unknown-linux-gnu/release/lib${{ inputs.name }}.so
                  name: 'lib${{ inputs.name }}.so'
          - - "@semantic-release/exec"
            - verifyConditionsCmd: "semantic-release-rust verify-conditions"
              prepareCmd: "semantic-release-rust prepare \${nextRelease.version}"
              publishCmd: "semantic-release-rust publish"
        EOT
        npm install --no-save conventional-changelog-conventionalcommits @semantic-release/exec
        npx semantic-release
      shell: bash
      working-directory: ./.github/workflows
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        CARGO_REGISTRY_TOKEN: ${{ inputs.cargo-registry-token }}
    - name: Revert source changes
      if: steps.source_changes.outputs.files != ''
      run: git revert HEAD^
      shell: bash
    - name: Commit and push changes for dev
      if: steps.source_changes.outputs.files != ''
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'chore: update Deno FFI bindings for development'
        file_pattern: 'bindings/bindings.ts'
