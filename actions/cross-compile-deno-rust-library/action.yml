name: cross-compile-deno-rust-library
description: 'Cross-compile Rust with Deno FFI bindings Library'
inputs:
  release:
    description: 'Whether to perform a release build'
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Checkout source
      uses: actions/checkout@v2
    - name: Install Deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.x
    - name: Setup Rust and Deno
      run: |
        deno install -Afq -n deno_bindgen https://deno.land/x/deno_bindgen/cli.ts
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-pc-windows-gnu
        rustup target add x86_64-unknown-linux-gnu
        brew install mingw-w64
        brew tap SergioBenitez/osxct
        brew install x86_64-unknown-linux-gnu
        echo "CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_LINKER=x86_64-unknown-linux-gnu-gcc" >> $GITHUB_ENV
        echo "CARGO_TARGET_DIR=${{ runner.temp }}/target" >> $GITHUB_ENV
      shell: bash
    - name: Cross-Compile Release
      if: ${{ inputs.release == "true" }}
      run: |
        deno_bindgen
        cargo build --target=aarch64-apple-darwin --release
        cargo build --target=x86_64-pc-windows-gnu --release
        cargo build --target=x86_64-unknown-linux-gnu --release
      shell: bash
    - name: Cross-Compile Debug
      if: ${{ inputs.release == "false" }}
      run: |
        deno_bindgen 
        cargo build --target=aarch64-apple-darwin
        cargo build --target=x86_64-pc-windows-gnu
        cargo build --target=x86_64-unknown-linux-gnu
      shell: bash
