name: release-bun-wasm-rust-library
on:
  workflow_call
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Check Bun and Rust (WASM) Source
        uses: flowscripter/.github/actions/check-bun-wasm-rust-source@v1
        with:
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
      - name: Run Bun and Rust (WASM) Tests
        uses: flowscripter/.github/actions/run-bun-wasm-rust-tests@v1
  release:
    runs-on: ubuntu-latest
    needs:
      - test
      - check
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
      pages: write
    concurrency:
      group: "release"
      cancel-in-progress: false
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: "latest"
      - name: Bun Install
        run: bun install
        shell: bash
      - name: Perform release
        id: release
        run: |
          cat <<EOT > .releaserc
          ---
          branches:
            - main
          plugins:
            - - "@semantic-release/commit-analyzer"
              - preset: conventionalcommits
            - - "@semantic-release/release-notes-generator"
              - preset: conventionalcommits
            - - "@semantic-release/exec"
              - verifyConditionsCmd: "wasm-pack build --target web --release"
              - publishCmd: "echo tag=v\${nextRelease.version} >> $GITHUB_OUTPUT"
            - - "@semantic-release/github"
              - path: pkg/
            - - "@semantic-release/npm"
              - pkgRoot: pkg
            - - "@semantic-release/git"
              - assets: 
                - Cargo.toml
                - Cargo.lock
                - package.json
                - bun.lock
          EOT
          cargo install wasm-pack
          bun add --no-save conventional-changelog-conventionalcommits @semantic-release/exec @semantic-release/git
          bunx semantic-release
        shell: bash
        env:
          GITHUB_ACTION: yes
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.PUSH_TO_MAIN_TOKEN }}
      - name: Install Deno
        if: steps.release.outputs.tag != ''
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - name: Generate docs
        if: steps.release.outputs.tag != ''
        run: deno doc --html --name=$(basename ${{ github.repository }}) index.ts
        shell: bash
      - name: Setup Pages
        if: steps.release.outputs.tag != ''
        uses: actions/configure-pages@v5
      - name: Upload artifact
        if: steps.release.outputs.tag != ''
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/'
      - name: Deploy to GitHub Pages
        if: steps.release.outputs.tag != ''
        id: deployment
        uses: actions/deploy-pages@v4
